logging.level.org.springframework=DEBUG

#spring.security.user.name=sagasoftech
#spring.security.user.password=123456


##MySQL
spring.datasource.url=jdbc:mysql://localhost:3306/eazybank
spring.datasource.username=eazybank-user
spring.datasource.password=dummypassword
spring.jpa.sql.show=true
spring.jpa.properties.hibernate.format_sql=true

logging.level.org.springframework.security.web.FilterChainProxy=DEBUG

#Authorization server will have private certificate using which it digitally sign all access token, id token
#
#This EazyBank resource server during the startup, it will download the public certificate 
#by connecting to the authorization server e.g. Keycloak
#with the help of public certificate, it can validate, if the token is valid or not
#This way resource server don't need to connect to the Authorization server
spring.security.oauth2.resourceserver.jwt.jwk-set-uri = http://localhost:8180/realms/eazybankdev/protocol/openid-connect/certs